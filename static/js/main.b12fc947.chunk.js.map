{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","commentName","name","commentEmail","email","commentBody","body","className","href","CommentList","comments","map","id","UserInfo","user","userEmail","PostInfo","post","postTitle","title","postBody","length","PostList","posts","postsFromServer","postId","commentsFromServer","filter","userId","usersFromServer","find","App","ReactDOM","render","document","getElementById"],"mappings":"k38IAAaA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACdC,EAAwDD,EAA9DE,KAA0BC,EAAoCH,EAA3CI,MAA2BC,EAAgBL,EAAtBM,KAEhD,OACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCN,IAEtC,OAED,mBACEM,UAAU,qBACVC,KAAI,iBAAYL,GAFlB,SAIGA,OAIL,qBAAKI,UAAU,oBAAf,SACGF,QChBII,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKH,UAAU,cAAf,SACGG,EAASC,KAAI,SAAAX,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQY,UCJrCC,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBZ,EAA2BY,EAA3BZ,KAAaa,EAAcD,EAArBV,MAEd,OACE,mBAAGG,UAAU,WAAWC,KAAI,iBAAYO,GAAxC,SACGb,MCHMc,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACVC,EAA8CD,EAArDE,MAAwBC,EAA6BH,EAAnCX,KAAgBQ,EAAmBG,EAAnBH,KAAMJ,EAAaO,EAAbP,SAEhD,OACE,sBAAKH,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCW,IAEjC,8BACG,eAED,cAAC,EAAD,CAAUJ,KAAMA,UAKpB,mBAAGP,UAAU,iBAAb,SACGa,IAGH,uBAECV,EAASW,OAAS,EACjB,cAAC,EAAD,CAAaX,SAAUA,IAEvB,mBAAG,UAAQ,oBAAX,iCC1BKY,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKhB,UAAU,WAAf,SACGgB,EAAMZ,KAAI,SAAAM,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKL,UCYtC,IAAMW,EAAQC,EAAgBb,KAAI,SAAAM,GAAI,kCACjCA,GADiC,IAEpCP,UAZuBe,EAYGR,EAAKL,GAXxBc,EAAmBC,QAAO,SAAA3B,GAAO,OAAIA,EAAQyB,SAAWA,MAC1D,MAWLX,MARmBc,EAQDX,EAAKW,OAPhBC,EAAgBC,MAAK,SAAAhB,GAAI,OAAIA,EAAKF,KAAOgB,MAC3C,QAFP,IAAqBA,EALIH,KAgBZM,EAAM,kBACjB,0BAASxB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUgB,MAAOA,QCxBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b12fc947.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => {\n  const { name: commentName, email: commentEmail, body: commentBody } = comment;\n\n  return (\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">{commentName}</strong>\n\n        {' by '}\n\n        <a\n          className=\"CommentInfo__email\"\n          href={`mailto:${commentEmail}`}\n        >\n          {commentEmail}\n        </a>\n      </div>\n\n      <div className=\"CommentInfo__body\">\n        {commentBody}\n      </div>\n    </div>\n  );\n};\n","import './CommentList.scss';\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo comment={comment} key={comment.id} />\n    ))}\n\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => {\n  const { name, email: userEmail } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${userEmail}`}>\n      {name}\n    </a>\n  );\n};\n","import './PostInfo.scss';\nimport { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\n\nexport const PostInfo = ({ post }) => {\n  const { title: postTitle, body: postBody, user, comments } = post;\n\n  return (\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">{postTitle}</h3>\n\n        <p>\n          {' Posted by  '}\n\n          <UserInfo user={user} />\n\n        </p>\n      </div>\n\n      <p className=\"PostInfo__body\">\n        {postBody}\n      </p>\n\n      <hr />\n\n      {comments.length > 0 ? (\n        <CommentList comments={comments} />\n      ) : (\n        <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n      )}\n    </div>\n  );\n};\n","import './PostList.scss';\nimport { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nimport { PostList } from './components/PostList';\n\nfunction getCommentsById(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId)\n    || null;\n}\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n\nconst posts = postsFromServer.map(post => ({\n  ...post,\n  comments: getCommentsById(post.id),\n  user: getUserById(post.userId),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}